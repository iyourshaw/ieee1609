/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "../../asn/1609.3/EUTRA-RRC-Definitions.asn"
 * 	`asn1c -fno-include-deps -fcompound-names-all -gen-OER -fincludes-quoted -no-gen-JER -pdu=all`
 */

#ifndef	_EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo_H_
#define	_EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo_H_


#include "asn_application.h"

/* Including external dependencies */
#include "EUTRA-RRC-Definitions_ARFCN-ValueEUTRA.h"
#include "EUTRA-RRC-Definitions_Q-RxLevMin.h"
#include "EUTRA-RRC-Definitions_P-Max.h"
#include "EUTRA-RRC-Definitions_T-Reselection.h"
#include "EUTRA-RRC-Definitions_ReselectionThreshold.h"
#include "EUTRA-RRC-Definitions_AllowedMeasBandwidth.h"
#include "EUTRA-RRC-Definitions_PresenceAntennaPort1.h"
#include "EUTRA-RRC-Definitions_CellReselectionPriority.h"
#include "EUTRA-RRC-Definitions_NeighCellConfig.h"
#include "EUTRA-RRC-Definitions_Q-OffsetRange.h"
#include "EUTRA-RRC-Definitions_Q-QualMin-r9.h"
#include "EUTRA-RRC-Definitions_ReselectionThresholdQ-r9.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct SpeedStateScaleFactors;
struct InterFreqNeighCellList;
struct InterFreqBlackCellList;

/* EUTRA-RRC-Definitions_InterFreqCarrierFreqInfo */
typedef struct EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo {
	EUTRA_RRC_Definitions_ARFCN_ValueEUTRA_t	 dl_CarrierFreq;
	EUTRA_RRC_Definitions_Q_RxLevMin_t	 q_RxLevMin;
	EUTRA_RRC_Definitions_P_Max_t	*p_Max;	/* OPTIONAL */
	EUTRA_RRC_Definitions_T_Reselection_t	 t_ReselectionEUTRA;
	struct SpeedStateScaleFactors	*t_ReselectionEUTRA_SF;	/* OPTIONAL */
	EUTRA_RRC_Definitions_ReselectionThreshold_t	 threshX_High;
	EUTRA_RRC_Definitions_ReselectionThreshold_t	 threshX_Low;
	EUTRA_RRC_Definitions_AllowedMeasBandwidth_t	 allowedMeasBandwidth;
	EUTRA_RRC_Definitions_PresenceAntennaPort1_t	 presenceAntennaPort1;
	EUTRA_RRC_Definitions_CellReselectionPriority_t	*cellReselectionPriority;	/* OPTIONAL */
	EUTRA_RRC_Definitions_NeighCellConfig_t	 neighCellConfig;
	EUTRA_RRC_Definitions_Q_OffsetRange_t	*q_OffsetFreq;	/* DEFAULT 15 */
	struct InterFreqNeighCellList	*interFreqNeighCellList;	/* OPTIONAL */
	struct InterFreqBlackCellList	*interFreqBlackCellList;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo__ext1 {
		EUTRA_RRC_Definitions_Q_QualMin_r9_t	*q_QualMin_r9;	/* OPTIONAL */
		struct EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo__ext1__threshX_Q_r9 {
			EUTRA_RRC_Definitions_ReselectionThresholdQ_r9_t	 threshX_HighQ_r9;
			EUTRA_RRC_Definitions_ReselectionThresholdQ_r9_t	 threshX_LowQ_r9;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *threshX_Q_r9;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo__ext2 {
		EUTRA_RRC_Definitions_Q_QualMin_r9_t	*q_QualMinWB_r11;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo;
extern asn_SEQUENCE_specifics_t asn_SPC_EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo_specs_1;
extern asn_TYPE_member_t asn_MBR_EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo_1[16];

#ifdef __cplusplus
}
#endif

#endif	/* _EUTRA_RRC_Definitions_InterFreqCarrierFreqInfo_H_ */
#include "asn_internal.h"
