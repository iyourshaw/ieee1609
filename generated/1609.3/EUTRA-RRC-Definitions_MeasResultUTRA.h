/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "../../asn/1609.3/EUTRA-RRC-Definitions.asn"
 * 	`asn1c -fno-include-deps -fcompound-names-all -gen-OER -fincludes-quoted -no-gen-JER -pdu=all`
 */

#ifndef	_EUTRA_RRC_Definitions_MeasResultUTRA_H_
#define	_EUTRA_RRC_Definitions_MeasResultUTRA_H_


#include "asn_application.h"

/* Including external dependencies */
#include "EUTRA-RRC-Definitions_PhysCellIdUTRA-FDD.h"
#include "EUTRA-RRC-Definitions_PhysCellIdUTRA-TDD.h"
#include "constr_CHOICE.h"
#include "EUTRA-RRC-Definitions_CellGlobalIdUTRA.h"
#include "BIT_STRING.h"
#include "constr_SEQUENCE.h"
#include "NativeInteger.h"
#include "NativeEnumerated.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum EUTRA_RRC_Definitions_MeasResultUTRA__physCellId_PR {
	EUTRA_RRC_Definitions_MeasResultUTRA__physCellId_PR_NOTHING,	/* No components present */
	EUTRA_RRC_Definitions_MeasResultUTRA__physCellId_PR_fdd,
	EUTRA_RRC_Definitions_MeasResultUTRA__physCellId_PR_tdd
} EUTRA_RRC_Definitions_MeasResultUTRA__physCellId_PR;
typedef enum EUTRA_RRC_Definitions_MeasResultUTRA__measResult__ext2__primaryPLMN_Suitable_r12 {
	EUTRA_RRC_Definitions_MeasResultUTRA__measResult__ext2__primaryPLMN_Suitable_r12_true	= 0
} e_EUTRA_RRC_Definitions_MeasResultUTRA__measResult__ext2__primaryPLMN_Suitable_r12;

/* Forward declarations */
struct PLMN_IdentityList2;
struct AdditionalSI_Info_r9;

/* EUTRA-RRC-Definitions_MeasResultUTRA */
typedef struct EUTRA_RRC_Definitions_MeasResultUTRA {
	struct EUTRA_RRC_Definitions_MeasResultUTRA__physCellId {
		EUTRA_RRC_Definitions_MeasResultUTRA__physCellId_PR present;
		union EUTRA_RRC_Definitions_MeasResultUTRA__physCellId_u {
			EUTRA_RRC_Definitions_PhysCellIdUTRA_FDD_t	 fdd;
			EUTRA_RRC_Definitions_PhysCellIdUTRA_TDD_t	 tdd;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} physCellId;
	struct EUTRA_RRC_Definitions_MeasResultUTRA__cgi_Info {
		EUTRA_RRC_Definitions_CellGlobalIdUTRA_t	 cellGlobalId;
		BIT_STRING_t	*locationAreaCode;	/* OPTIONAL */
		BIT_STRING_t	*routingAreaCode;	/* OPTIONAL */
		struct PLMN_IdentityList2	*plmn_IdentityList;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *cgi_Info;
	struct EUTRA_RRC_Definitions_MeasResultUTRA__measResult {
		long	*utra_RSCP;	/* OPTIONAL */
		long	*utra_EcN0;	/* OPTIONAL */
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
		struct EUTRA_RRC_Definitions_MeasResultUTRA__measResult__ext1 {
			struct AdditionalSI_Info_r9	*additionalSI_Info_r9;	/* OPTIONAL */
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *ext1;
		struct EUTRA_RRC_Definitions_MeasResultUTRA__measResult__ext2 {
			long	*primaryPLMN_Suitable_r12;	/* OPTIONAL */
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *ext2;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} measResult;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} EUTRA_RRC_Definitions_MeasResultUTRA_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_primaryPLMN_Suitable_r12_17;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_EUTRA_RRC_Definitions_MeasResultUTRA;
extern asn_SEQUENCE_specifics_t asn_SPC_EUTRA_RRC_Definitions_MeasResultUTRA_specs_1;
extern asn_TYPE_member_t asn_MBR_EUTRA_RRC_Definitions_MeasResultUTRA_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _EUTRA_RRC_Definitions_MeasResultUTRA_H_ */
#include "asn_internal.h"
