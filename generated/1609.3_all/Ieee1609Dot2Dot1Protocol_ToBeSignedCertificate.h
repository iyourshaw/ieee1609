/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "Ieee1609Dot2Dot1Protocol"
 * 	found in "../../asn/1609.3-2020/protocol.asn"
 * 	`asn1c -fno-include-deps -fcompound-names-all -gen-OER -fincludes-quoted -pdu=auto`
 */

#ifndef	_Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate_H_
#define	_Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate_H_


#include "asn_application.h"

/* Including external dependencies */
#include "IEEE1609dot2_CertificateId.h"
#include "IEEE1609dot2BaseTypes_HashedId3.h"
#include "IEEE1609dot2BaseTypes_CrlSeries.h"
#include "IEEE1609dot2BaseTypes_ValidityPeriod.h"
#include "IEEE1609dot2BaseTypes_SubjectAssurance.h"
#include "NULL.h"
#include "IEEE1609dot2_VerificationKeyIndicator.h"
#include "BIT_STRING.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate__flags {
	Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate__flags_cubk	= 0
} e_Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate__flags;

/* Forward declarations */
struct GeographicRegion;
struct SequenceOfPsidSsp;
struct SequenceOfPsidGroupPermissions;
struct PublicEncryptionKey;

/* Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate */
typedef struct Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate {
	IEEE1609dot2_CertificateId_t	 id;
	IEEE1609dot2BaseTypes_HashedId3_t	 cracaId;
	IEEE1609dot2BaseTypes_CrlSeries_t	 crlSeries;
	IEEE1609dot2BaseTypes_ValidityPeriod_t	 validityPeriod;
	struct GeographicRegion	*region;	/* OPTIONAL */
	IEEE1609dot2BaseTypes_SubjectAssurance_t	*assuranceLevel;	/* OPTIONAL */
	struct SequenceOfPsidSsp	*appPermissions;	/* OPTIONAL */
	struct SequenceOfPsidGroupPermissions	*certIssuePermissions;	/* OPTIONAL */
	struct SequenceOfPsidGroupPermissions	*certRequestPermissions;	/* OPTIONAL */
	NULL_t	*canRequestRollover;	/* OPTIONAL */
	struct PublicEncryptionKey	*encryptionKey;	/* OPTIONAL */
	IEEE1609dot2_VerificationKeyIndicator_t	 verifyKeyIndicator;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	BIT_STRING_t	*flags;	/* OPTIONAL */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate;
extern asn_SEQUENCE_specifics_t asn_SPC_Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate_specs_1;
extern asn_TYPE_member_t asn_MBR_Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate_1[13];
extern asn_per_constraints_t asn_PER_type_Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _Ieee1609Dot2Dot1Protocol_ToBeSignedCertificate_H_ */
#include "asn_internal.h"
