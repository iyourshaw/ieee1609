/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "IEEE1609dot2BaseTypes"
 * 	found in "../../asn/1609.3-2020/1609dot2-base-types.asn"
 * 	`asn1c -fno-include-deps -fcompound-names-all -gen-OER -fincludes-quoted -pdu=auto`
 */

#ifndef	_IEEE1609dot2BaseTypes_GeographicRegion_H_
#define	_IEEE1609dot2BaseTypes_GeographicRegion_H_


#include "asn_application.h"

/* Including external dependencies */
#include "IEEE1609dot2BaseTypes_CircularRegion.h"
#include "IEEE1609dot2BaseTypes_SequenceOfRectangularRegion.h"
#include "IEEE1609dot2BaseTypes_PolygonalRegion.h"
#include "IEEE1609dot2BaseTypes_SequenceOfIdentifiedRegion.h"
#include "constr_CHOICE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum IEEE1609dot2BaseTypes_GeographicRegion_PR {
	IEEE1609dot2BaseTypes_GeographicRegion_PR_NOTHING,	/* No components present */
	IEEE1609dot2BaseTypes_GeographicRegion_PR_circularRegion,
	IEEE1609dot2BaseTypes_GeographicRegion_PR_rectangularRegion,
	IEEE1609dot2BaseTypes_GeographicRegion_PR_polygonalRegion,
	IEEE1609dot2BaseTypes_GeographicRegion_PR_identifiedRegion
	/* Extensions may appear below */
	
} IEEE1609dot2BaseTypes_GeographicRegion_PR;

/* IEEE1609dot2BaseTypes_GeographicRegion */
typedef struct IEEE1609dot2BaseTypes_GeographicRegion {
	IEEE1609dot2BaseTypes_GeographicRegion_PR present;
	union IEEE1609dot2BaseTypes_GeographicRegion_u {
		IEEE1609dot2BaseTypes_CircularRegion_t	 circularRegion;
		IEEE1609dot2BaseTypes_SequenceOfRectangularRegion_t	 rectangularRegion;
		IEEE1609dot2BaseTypes_PolygonalRegion_t	 polygonalRegion;
		IEEE1609dot2BaseTypes_SequenceOfIdentifiedRegion_t	 identifiedRegion;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} IEEE1609dot2BaseTypes_GeographicRegion_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_IEEE1609dot2BaseTypes_GeographicRegion;
extern asn_CHOICE_specifics_t asn_SPC_IEEE1609dot2BaseTypes_GeographicRegion_specs_1;
extern asn_TYPE_member_t asn_MBR_IEEE1609dot2BaseTypes_GeographicRegion_1[4];
extern asn_per_constraints_t asn_PER_type_IEEE1609dot2BaseTypes_GeographicRegion_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _IEEE1609dot2BaseTypes_GeographicRegion_H_ */
#include "asn_internal.h"
